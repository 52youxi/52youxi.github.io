<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大一，就可以放纵自己吗？</title>
      <link href="/2022/03/05/dayibukefangzong/"/>
      <url>/2022/03/05/dayibukefangzong/</url>
      
        <content type="html"><![CDATA[<p> “再努把力，到大学想怎么玩怎么玩！”</p><p>“大学就是自由的天堂”</p><p>……</p><p>初入大学半年</p><p>很多同学发现</p><p><strong>大学生活好像不是自己所想象的那样</strong></p><p>每天不知道如何安排自己的学习生活</p><p>但又不想每天这么浑浑噩噩过下去</p><p><strong>“我真的很想改变！”</strong></p><p><strong>迷茫从何而来</strong></p><img src="https://uploadbeta.com/share-image/hDJ" alt="图片alt" style="zoom:33%;" /><p>相比高中阶段</p><p>学习目标相对清晰</p><p>自主规划要求不高</p><p>那时候自身的成长</p><p>在某种程度上是可视的</p><p><strong>但到大学阶段</strong></p><p><strong>课程需要自主选择</strong></p><p><strong>上课时间相对灵活</strong></p><p><strong>业余生活非常丰富之时</strong></p><p>很多同学甚至会有一种</p><p><strong>“逃一节课没人发现</strong></p><p><strong>多上几节自习也没见进步多少”的错觉</strong></p><p>这样没有目标感的大学生活</p><p>很容易导致<strong>间歇性振作</strong></p><p>进入日常化“摸鱼”状态的负循环中</p><p><strong>不仅会获得感缺失</strong></p><p><strong>还会叠加自己的“负罪感”</strong></p><img src="https://uploadbeta.com/share-image/hDK" alt="图片alt" style="zoom: 33%;" /><p>可以发现迷茫出现的<strong>根本原因</strong></p><p>主要有两个方面：</p><p><strong>1、高中与大学两个发展阶段的转变</strong></p><p><strong>2、大学的开放包容性与自我认知度不相适</strong></p><p>也就是说</p><p>既没有完全认识大学</p><p>也没有很好地认知自我</p><p>即便这样也不必焦虑</p><p>这是我们在成长发展转变过程中</p><p>很自然的一种状态</p><p><strong>想要解决不难</strong></p><p><strong>但需要思路清晰</strong></p><p><strong>不断实践</strong></p><img src="https://uploadbeta.com/share-image/hDI" alt="图片" style="zoom: 50%;" /><p><em><strong>*完成一次“成长推演”*</strong></em></p><p>此时</p><p>不妨找一间安静的自习室或图书馆</p><p>带上一支笔和几张A4白纸</p><p>在安静的环境中边想边记录</p><p>让思考的痕迹可视化</p><p>可以帮助你很好</p><p>很清晰地进行成长推演</p><p>抛开大家总谈的业余时间怎么样规划</p><p>如何丰富大学生活？</p><p>首先，<strong>要先区分清楚一对关系</strong></p><p><strong>即大学生的“主业”和“副业”是什么</strong></p><p>毋庸置疑</p><p>大学生的“主业”一定是学习</p><p>但在回顾大一的学习生活时</p><p>在进入新环境</p><p>加入新社团</p><p>结交新朋友之后</p><p><strong>你真的做到认真学习了吗？</strong></p><p><strong>每一节课都去上了吗？</strong></p><p><strong>去上课的时候都认真听了吗？</strong></p><p><strong>课后的作业都是自己独立完成的吗？</strong></p><p><strong>每天又有多少时间在“真正地”学习？</strong></p><p>面对一连串的追问</p><p>你诚实地写下自己的答案</p><p>或许可以找到一部分获得感缺失的原因</p><img src="https://uploadbeta.com/share-image/hDL" alt="图片" style="zoom:33%;" /><p><strong>大学阶段更应把首要任务</strong></p><p><strong>——学习****放在第一位</strong></p><p>只不过这一阶段的</p><p>学习方式、方法、空间</p><p>都有所变化</p><p><strong>学习研究的过程要求</strong></p><p><strong>更独立、更专一、更注重方法</strong></p><p>同时，学习也是在</p><p>充满未知性和可能性的大学生活中</p><p>较为确定的一部分</p><p>因此<strong>认真学好专业课程</strong></p><p><strong>在上课、实验、作业、考试等环节中</strong></p><p><strong>持续输出可视化成果</strong></p><p>这也是大学生活安全感的最主要部分</p><img src="https://uploadbeta.com/share-image/hDH" alt="图片" style="zoom:50%;" /><p>而在实际校园生活中</p><p>许多同学思考的是</p><p>如何平衡学业</p><p>与学生工作、兴趣社团等的时间分配</p><p>殊不知我们应该</p><p><strong>先把学业这个基本盘做好</strong></p><p><strong>为未来发展打好基础</strong></p><p>再去给自己的</p><p>全面发展规划路线图</p><p>需要说明的是</p><p><strong>二者亦不矛盾</strong></p><h3 id="干货一"><a href="#干货一" class="headerlink" title="干货一"></a><strong>干货一</strong></h3><p><strong>迷茫的时候，先别想太多，首先搞好专业学习这点不会错。</strong></p><p>在迷茫中探路之前</p><p>要先搞清楚两件事</p><p><strong>即发现大学和认知自己</strong></p><p>这是一个在主动探索</p><p>发现大学的基础上</p><p>逐渐认知自我价值和兴趣的过程</p><p>也是一个以自我实现为能量的</p><p>正向成长循环</p><p>这一点的目的在于</p><p><strong>帮助你找准“副业”的方向</strong></p><p><strong>将课余时间丰盈充实起来</strong></p><p><strong>助益全面成长</strong></p><p>自我价值因人而异</p><p>包含国家社会生活中的公约性价值</p><p>也有追求人生进步的发展性价值等</p><p>在大学校园中</p><p>可以是在班级或社团组织中贡献力量、承担任务</p><p>也可以通过自身的特长和优势助益国家社会发展</p><p><strong>在校园生活视阈内思考价值的同时</strong></p><p><strong>就已经是在</strong></p><p><strong>主动思考、探索发现大学学习生活中</strong></p><p><strong>价值分布的过程</strong></p><p>如果能够在自我价值实现上持续做功</p><p>即可以发挥<strong>“长板效应”</strong></p><p>累蓄能量</p><p><strong>同时不断建立自信</strong></p><p><strong>增强现实获得感</strong></p><p>另一方面</p><p>兴趣则分为两种情况</p><p>一种是</p><p><strong>自己已经有较为明确的兴趣方向</strong></p><p>那尽可充分享用大学提供的舞台</p><p>尽情施展才华</p><p>丰盈自己的生活</p><p>另一种是</p><p>同学们常说的</p><p><strong>“我也不知道自己对啥感兴趣”</strong></p><p>这需要对大学生活有较为全面的了解</p><p>可以通过主动</p><p>咨询老师、进行朋辈沟通等实现</p><p><strong>将收集到的信息和重点</strong></p><p><strong>按照不同类别画出清晰的树状图</strong></p><p>再结合以后</p><p>自身感受、职业规划等</p><p>做出相应选择</p><p>继续培养和实践</p><img src="https://uploadbeta.com/share-image/hDN" alt="图片alt" style="zoom:33%;" /><h3 id="干货二"><a href="#干货二" class="headerlink" title="干货二"></a><strong>干货二</strong></h3><p><strong>搞好专业学习的基础上，要充分发现大学学习生活的价值分布和认知自己的兴趣价值，并落实在纸面上进行选择规划。</strong></p><p>理清“主业”和“副业”的</p><p>方向和路径后</p><p>迷茫感仅可减轻少部分</p><p>真正克服迷茫期焦虑情绪的</p><p><strong>关键在于实践</strong></p><p><strong>即将上述的构想“变现”</strong></p><p>因此</p><p><strong>要在实践中落实好两个关键词</strong></p><p><strong>即持续努力和持续改进</strong></p><p>选择合适的方法或许因人而异</p><p><strong>但走出迷茫的路上</strong></p><p><strong>有一点不可或缺</strong></p><p><strong>那就是必须要踏踏实实地努力</strong></p><p>真正的捷径</p><p>就是一个<strong>“干”</strong>字</p><p>做好这个方面</p><p>要抓住两个关键要素</p><p><strong>一是心态</strong></p><p><strong>二是方法</strong></p><p>在下定决心做好一件事的时候</p><p>要客观地认清</p><p><strong>随时可能接受挫折</strong></p><p><strong>和事成不易的考验</strong></p><p><strong>必须要有静气和耐心</strong></p><p>而不是稍遇坎坷</p><p>就立马调转“风向”、改变计划</p><p>到头来竹篮打水一场空</p><p>同时</p><p><strong>要注意不能盲干</strong></p><p>不同的事情、不同的人、不同的阶段</p><p>所选择的方法也不尽相同</p><p>但在成长过程中</p><p><strong>阶段性的可视化的进步一定要有</strong></p><p><strong>没有进步也就没有获得感和正反馈</strong></p><p>所以必须要在自己成长发展过程中</p><p><strong>进行阶段性小结</strong></p><p><strong>并针对自己出现的问题加以改进</strong></p><p>逐期叠加</p><p>如此便会发现</p><p>自己的兴趣正在持续加强</p><p>自己的价值正在螺旋上升</p><p>很快即可走出阶段性迷茫</p><h3 id="干货三"><a href="#干货三" class="headerlink" title="干货三"></a><strong>干货三</strong></h3><p><strong>始终保持“持续努力+持续改进”的状态，沉心静气，久久为功。</strong></p><img src="https://uploadbeta.com/share-image/hDO" alt="图片alt" style="zoom:33%;" /><p>此刻你的笔下</p><p>或许已经记录不少思考</p><p>以上建议权做参考引导</p><p>相信你枕笔之时</p><p><strong>来时困惑，轻舟已过</strong></p><p>来源：共青团中央知乎官方账号。</p><p>分享此文，愿与诸君共勉。</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 励志美文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大事记</title>
      <link href="/2022/03/05/dashiji/"/>
      <url>/2022/03/05/dashiji/</url>
      
        <content type="html"><![CDATA[<p> 这篇文章记载了关于博客发生的主要事件。</p><ul><li>2022年01月15日     博客部署完成，正式上线  ；</li><li>2022年01月18日     博客试用valine评论</li><li>2022年01月21日     博客内第一篇文章发表；</li><li>2022年01月21日     因为某些原因，博客改用来比力评论</li><li>······                            博客一直没有更新，不要问为什么没有更新，问就是因为我懒；</li><li>2022年02月27日     博客迎来第一位访客；</li><li>2022年02月28日     博客弃用来比力评论，最终决定使用waline评论；</li><li>2022年03月01日     博客重新开始更新。</li></ul>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关于博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建教程(二)</title>
      <link href="/2022/03/05/hexoblogdajianer/"/>
      <url>/2022/03/05/hexoblogdajianer/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建之前的准备"><a href="#搭建之前的准备" class="headerlink" title="搭建之前的准备"></a>搭建之前的准备</h2><ul><li>安装nodejs</li></ul><blockquote><p>下载地址:<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p></blockquote><p>选择windows安装包.msi安装,运行安装包，我们默认选择c盘(不要换成其他盘，不然可能还得配置环境)</p><p>在这里选择Add to PATH然后点Next继续就行了</p><p><img src="https://uploadbeta.com/share-image/hDb" alt="图片alt" title="图片"></p><ul><li>安装Git</li></ul><blockquote><p>下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p></blockquote><p>运行安装包，选择合适的安装位置，然后点Next，后面的安装步骤全部只要点Next就行了，不需要我们多余配置</p><ul><li>验证nodejs是否安装配置成功</li></ul><p>我们安装完Git后，在桌面右键会有Git Bash Here，我们直接点开</p><p>会出来一个终端，我们分别执行下面的命令</p><pre class="line-numbers language-none"><code class="language-none">$ node -v$ npm -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果输出了版本号，那么证明配置成功，如果没有版本号，请重新安装nodejs（检查是否勾选Add to Path），或者手动为nodejs添加环境变量</p><ul><li>安装cnpm</li></ul><p>在git bash里面执行下面的命令</p><pre class="line-numbers language-none"><code class="language-none">$ npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>检查cnpm是否安装成功</strong></p><p>执行</p><pre class="line-numbers language-none"><code class="language-none">$ cnpm -v <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果输出版本号就是安装成功了</p><h2 id="安装hexo和初始化博客"><a href="#安装hexo和初始化博客" class="headerlink" title="安装hexo和初始化博客"></a>安装hexo和初始化博客</h2><ul><li>安装hexo </li></ul><p>在git bash执行下面的命令安装hexo</p><pre class="line-numbers language-none"><code class="language-none">$ cnpm install hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>初始化博客</li></ul><p>选择一个文件夹，然后右键打开git bash</p><p>例如：我在D盘新建了一个blog文件夹，就在blog文件夹下打开git bash</p><p>然后执行</p><pre class="line-numbers language-none"><code class="language-none">$ hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后继续下面的步骤</p><p>等待命令完成后，就完成了初始化，现在就可以预览我们的博客了</p><p>执行下面这个命令</p><pre class="line-numbers language-none"><code class="language-none">$ hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后会出来一段http开头的网址，我们复制下来然后在浏览器打开</p><p><img src="https://uploadbeta.com/share-image/hDc" alt="图片alt" title="图片"></p><p>就会出现hello world欢迎页面了</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>你是否觉得默认主题有点不好看呢？现在教你如何替换主题</p><p>hexo的所有主题都在下面这个地址：</p><blockquote><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p></blockquote><p>你可能会在这个地址看到很多好看的主题，但是我们要慢慢来，有些主题的配置难度还是很高的</p><p>我们要找一个功能齐全，配置简单的主题练练手</p><p>就是这个新手入门hexo必备的Next主题</p><blockquote><p>预览效果：<a href="https://theme-next.org/">https://theme-next.org/</a></p><p>项目地址：<a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></p><p>配置文档：<a href="https://theme-next.org/docs/getting-started/">https://theme-next.org/docs/getting-started/</a></p></blockquote><ul><li>如何下载主题</li></ul><p>方法1</p><p>打开主题的项目地址后，点击<code>Clone or download</code></p><p>然后复制https开头的地址，在你的博客文件夹下面打开git bash</p><p>执行：</p><pre class="line-numbers language-none"><code class="language-none">git clone 复制的地址 themes&#x2F;主题名字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>现在给你解释一下这个命令</p><p>git clone 代表克隆，后面接上一串下载地址，最后面的themes/next是把文件夹下载到主题目录下，并把主题文件命名为next</p><p>方法2</p><p>如果你觉得比较麻烦，还有第二个办法</p><p>打开主题项目地址，然后点击<code>Clone or download</code>，然后点击Download ZIP</p><p>这样可以下载主题文件压缩包，前提是你已经登入了github（没有账号的，请自己注册一下）</p><p>然后解压压缩包，把文件夹放在博客目录下的themes目录，并把文件夹命名为主题的名字</p><ul><li>修改配置文件</li></ul><p>在博客的目录下有一个叫<code>_config.yml</code>的文件</p><p>将它打开，找到<code>themes</code>这一行，然后将主题名字修改为next，这样的话，主题就成功更换了。</p><ul><li>预览主题</li></ul><p>在博客目录打开git bash</p><p>执行</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还是会出现一段浏览地址，我们在浏览器打开就行了</p><blockquote><p>注意：有些主题你更换之后是暂时无法预览的，因为有的主题还需要安装它需要的依赖，这一般都会在主题的文档里面提到，只有安装它的依赖之后才可以正常预览，这里暂时不做说明.</p></blockquote><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>我们需要认识两个文件</p><ul><li>站点配置文件</li></ul><p>指的是博客根目录下的<code>_config.yml</code></p><ul><li>主题配置文件</li></ul><p>指的是某个主题下的<code>_config.yml</code></p><p>它们的名字都叫<code>_config.yml</code>但是你不能弄混淆</p><p>在我们看主题文档配置的时候，是必须要分清这两个概念的，不然会报错</p><p>我们先来几个基本的配置</p><ul><li>设置语言</li></ul><p>在Next主题的文档里面提到了如何更换语言</p><p>它要求我们更改的是站点配置文件，并且给出了代码示范</p><p>我们打开站点配置文件</p><p>按照要求，将language的配置改成zh-CN，然后保存文件</p><ul><li>其他设置</li></ul><p>现在再来尝试一个</p><p>Next主题里面有个Scheme选项，可以更改主题的外观</p><p>根据要求，我们需要更改的是主题配置文件</p><p>打开主题配置文件，我们尝试scheme改成双栏，也就是需要修改成Pisces</p><p>现在已经修改过两个配置了，为了检验是否修改成功，我们需要预览一下主题</p><p>在博客根目录下执行</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后打开链接，可以看到都设置成功了。</p><h2 id="生成文章的编辑工具"><a href="#生成文章的编辑工具" class="headerlink" title="生成文章的编辑工具"></a>生成文章的编辑工具</h2><p>在博客根目录下面执行：</p><pre class="line-numbers language-none"><code class="language-none">$ hexo new &quot;文章链接&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例如：你想创建一个名为”我的第一个博客“的文章</p><p>可以执行：</p><pre class="line-numbers language-none"><code class="language-none">$ hexo new &quot;my-first-blog&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>文章链接建议是英文，然后会显示你的文章生成的目录，每次生成的文章都固定在你的博客根目录下面的source/_posts下</p><p>可以看到是一个后缀为.md的文件，这个其实是一个markdown文件，如果你不知道markdown是什么，在进阶篇会告诉你，就算你不会markdown，你可以暂时把这个当成txt文件</p><p>我建议你安装Typora编辑.md文件</p><p>按照目录打开my-firsy-blog.md文件，可以看到一个横线上面有一段信息</p><p>这里面是存放你博客信息的地方</p><ul><li>title 文章标题</li><li>date 文章日期</li><li>tag 文章标签 （暂时不说明如何配置，进阶篇会讲到）</li></ul><p>然后这时候你可以修改文章标题，并且在横线下面输入你文章的内容</p><p>保存之后，你可以在博客根目录打开git bash</p><p>执行</p><pre class="line-numbers language-none"><code class="language-none">$ hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>记得：预览博客都是这个命令</p><h2 id="部署你的博客"><a href="#部署你的博客" class="headerlink" title="部署你的博客"></a>部署你的博客</h2><p>现在我们的博客都是只能本地预览，如何将我们的上传到一个地方，然后通过域名访问呢？</p><p>你可能觉得需要一个服务器再买个域名绑定，我可以告诉你都不需要</p><p>下面介绍两种部署方法</p><p>先来个对比</p><p><strong>github：</strong></p><ul><li>国外网站，是英文</li><li>访问速度较慢</li><li>不需要实名认证</li><li>域名形式可以自定义</li></ul><p><strong>coding：</strong></p><ul><li>国内的平台，网站是中文</li><li>访问速度快</li><li>部署网站需要实名认证，只需要填写身份证号即可</li><li>域名是随机给的，所以很长而且不能自定义</li></ul><p>如果你有自己的域名，github和coding都可以绑定域名</p><h4 id="coding"><a href="#coding" class="headerlink" title="coding"></a>coding</h4><blockquote><p><a href="https://coding.net/user">https://coding.net/user</a></p></blockquote><p>注册一个coding的账号，这里不做演示</p><p>然后按照图片新建一个项目</p><p><img src="https://uploadbeta.com/share-image/hDe" alt="图片alt" title="图片"></p><p>选择devops</p><p><img src="https://uploadbeta.com/share-image/hDf" alt="图片alt" title="图片"></p><p>填入相关信息，记得勾选**<code>启用README.cd文件初始化项目</code>**</p><p><img src="https://uploadbeta.com/share-image/hDh" alt="图片alt" title="图片"></p><p>然后完成创建</p><p>我们暂时不能直接上传，需要进行一些配置，如下：</p><p>接下来需要我们创建一个git秘钥</p><p>打开git bash（不要求在哪个目录）</p><p>执行： “这里面是你的邮箱”</p><p>不管出现什么信息，你只需要回车就行了</p><pre class="line-numbers language-none"><code class="language-none">$ ssh-keygen -t rsa -C “your_email@youremail.com“<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后执行</p><pre class="line-numbers language-none"><code class="language-none">$ cat ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会输出你的秘钥，我们复制输出信息就行了</p><p>然后点击头像，打开个人设置–选择SSH公钥–新增公钥</p><p><img src="https://uploadbeta.com/share-image/hDj" alt="图片alt" title="图片"></p><p>然后将你复制的秘钥粘贴进去，记得勾选永久有效</p><p>然后打开git bash</p><p>执行：</p><pre class="line-numbers language-none"><code class="language-none">$  ssh -T git@git.coding.net<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会提示你下面这个，输入yes回车就行了</p><p>接下来打开你的项目选择SSH，然后复制右边git开头的地址</p><p><img src="https://uploadbeta.com/share-image/hDk" alt="图片alt" title="图片"></p><p>打开站点配置文件</p><p>修改deploy信息</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: 你复制的地址  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在博客根目录下打开git bash</p><p>分别执行下面的命令：</p><p>yourname是你的名字</p><p>youremail是你的邮箱</p><pre class="line-numbers language-none"><code class="language-none">$ git config --global user.name &quot;yourname&quot;$ git config --global user.email &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后安装上传插件</p><pre class="line-numbers language-none"><code class="language-none">cnpm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传</p><p>在博客根目录下打开git bash，执行下面的命令就可以上传了</p><pre class="line-numbers language-none"><code class="language-none">hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后打开项目，打开构建与部署–静态网站–立即发布静态网站</p><p>coding需要实名认证，只需要你输入身份证号就可以了，不用担心泄露隐私，因为coding现在是腾讯的</p><p>我们只要填写网站名称就行了，然后保存</p><p><img src="https://uploadbeta.com/share-image/hDx" alt="图片alt" title="图片"></p><p>因为是刚构建的网站，所以要手动部署一下，以后上传就不需要手动部署</p><p>然后访问所给的地址，那个就是我们网站的地址了</p><p>之后每次修改完博客要上传的时候，只需执行上传命令</p><h4 id="github部署"><a href="#github部署" class="headerlink" title="github部署"></a>github部署</h4><p>你还可以使用github部署你的博客</p><p>这里不演示如何注册账号</p><p>首先创建一个仓库</p><p>仓库名必须是用户名 + .github.io</p><p>接下来需要我们创建一个git秘钥</p><p>打开git bash（不要求在哪个目录）</p><p>执行： “这里面是你的邮箱”</p><p>不管出现什么信息，你只需要回车就可以了</p><pre class="line-numbers language-none"><code class="language-none">$ ssh-keygen -t rsa -C “your_email@youremail.com“<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后执行</p><pre class="line-numbers language-none"><code class="language-none">$ cat ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会输出你的秘钥，我们复制输出信息就行了</p><p>然后点击头像，点击Settings–SSH·····–New SSH Key</p><p>粘贴你复制的秘钥</p><p>然后打开git bash</p><p>执行：</p><pre class="line-numbers language-none"><code class="language-none">$  ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会提示你下面这个，输入yes回车就行了</p><pre class="line-numbers language-none"><code class="language-none">Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开项目，点击绿色按钮，点击Use SSH</p><p>复制git开头的地址</p><p>打开站点配置文件</p><p>修改deploy信息</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: 你复制的地址  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在博客根目录下打开git bash</p><p>分别执行下面的命令：</p><p>yourname是你的名字</p><p>youremail是你的邮箱</p><pre class="line-numbers language-none"><code class="language-none">$ git config --global user.name &quot;yourname&quot;$ git config --global user.email &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后安装上传插件</p><pre class="line-numbers language-none"><code class="language-none">cnpm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传</p><p>在博客根目录下打开git bash，执行下面的命令就可以上传了</p><pre class="line-numbers language-none"><code class="language-none">hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后打开项目，点击Settings</p><p>往下滑找到Github pages</p><p>点击none 选择master branch</p><p>之后你会得到一个地址，这个就是你的网站地址了。</p><h2 id="学习markdown语法"><a href="#学习markdown语法" class="headerlink" title="学习markdown语法"></a>学习markdown语法</h2><p>如果你想让你的博客，看起来更加美观，学习markdown是必要的，你不需要存在害怕的心理，因为markdown十分简单，就是记住几个符号就行了，不是你想象的他和学习编程语言一样复杂。</p><p>在开始之前，我们需要一个markdown的编辑器，来帮助我们识别markdown的文本，我推荐你使用**<code>Typora</code>**</p><p>大家可以通过下面的两个教程来学习。</p><p><a href="https://markdown.com.cn/">Markdown 官方教程</a></p><p><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程 | 菜鸟教程 (runoob.com)</a></p><h2 id="图床的使用"><a href="#图床的使用" class="headerlink" title="图床的使用"></a>图床的使用</h2><p>在markdown的学习里面，我们知道只有插入超链接的图片，才能使博客速度加快，</p><ul><li>使用图床</li></ul><p>在网上有很多免费的图床</p><p>例如：<a href="https://sm.ms/">https://sm.ms/</a></p><p>​           <a href="https://www.tongleer.com/iiilab/">共享图床 - 一个共享的稳定免费图床 (tongleer.com)</a></p><p>到此，本教程就结束了，祝大家都可以拥有让自己满意的博客。</p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 建站教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈个人博客</title>
      <link href="/2022/03/04/qiantangerenblog/"/>
      <url>/2022/03/04/qiantangerenblog/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>博客</strong>：其实博客的正式名称是网络日记，见名知意，是使用特定软件在网络上出版发表和张贴个人文章的人，或者是一种由个人管理不定期更新文章的网站。</p></blockquote><h2 id="博客搭建方式"><a href="#博客搭建方式" class="headerlink" title="博客搭建方式"></a>博客搭建方式</h2><p>搭建个人博客主要有三种方式，从难到易如下：</p><p>大佬：独立博客，有自己的网站，自己写代码。<br>普通人：独立博客， 有自己的网站， 套用 WordPress、Typecho 等程序。<br>懒人：QQ 空间（是的，QQ空间可以作你的个人博客）、社区平台，没有自己的网站，如 CSDN、博客园、Medium、SegmentFault、 简书、知乎、微博、公众号等等。</p><p>个人博客更有个性，自主权比较高，一切都可以自己定制，毫无限制，自己的地盘自己做主，还可以寻找志同道合的朋友。</p><h2 id="自建博客的好处："><a href="#自建博客的好处：" class="headerlink" title="自建博客的好处："></a>自建博客的好处：</h2><ul><li><p>打造网上名片。将自己的个人网站定义为个人简历，能向别人更全面的展示自己，而且不受平台的一些繁琐的条例约束（在不违法的前提下）。</p></li><li><p>自我营销。对于文学创作者、营销策划人员、新媒体自媒体工作者而言，独立的博客网站十分必要。自媒体、新媒体平台是一旦账号被封或者被盗，之前的努力可能就白费了。独立的博客网站就不会陷入这样的困境了。</p></li><li><p>降低自我营销成本。在新媒体自媒体等平台的广告投放价格是十分昂贵的，即便是需要使用自己的域名，一整年的花销加起来也几百元。</p></li><li><p>记录人生。除了前面那些比较功利的意义和作用，独立的博客网站也是非常好的记录人生的工具。入住其它共公博客平台，也要承担平台关闭后数据遗失的风险。个人网站则很好地规避了这一点，并且能更好地保护好自己的数据和文章。</p></li></ul><h2 id="常用的博客系统的优缺点："><a href="#常用的博客系统的优缺点：" class="headerlink" title="常用的博客系统的优缺点："></a>常用的博客系统的优缺点：</h2><p><strong>一、Wordpress</strong></p><p>wordpress是目前使用范围最广，最知名的独立博客系统，寻小山做过的几个网站都是使用这款程序，所以优先给大家介绍这个博客系统。</p><p><strong>1、优点</strong></p><ul><li><p>WordPress 功能强大、扩展性强，这主要得益于其插件众多，易于扩充功能，基本上一个完整网站该有的功能，通过其第三方插件都能实现所有功能；</p></li><li><p>wordpress搭建的博客对seo搜索引擎友好，收录也快，排名靠前；</p></li><li><p>易于二次开发，程序设计比较好，便于二次开发。</p></li><li><p>主题很多，网站上一大片都是wordpress的主题，各色各样，应有尽有！</p></li><li><p>wordpress备份和网站转移比较方便，原站点使用站内工具导出后，使用WordPress Importer插件就能方便地将内容导入新网站。</p></li><li><p>wordpress有强大的社区支持，有上千万的开发者贡献和审查wordpress，所以wordpress是安全并且活跃的。</p></li></ul><p>2、<strong>缺点</strong></p><ul><li><p>wordpress源码系统初始内容基本只是一个框架，需要时间自己搭建；</p></li><li><p>插件虽多，但是不能安装太多插件，否则会拖累网站速度和降低用户体验；</p></li><li><p>程序臃肿，占用内存稍微大。</p></li><li><p>静态化较差，确切地说是真正静态化做得不好，如果要想对整个网站生成真正静态化页面，还做不好，最多只能生成首页和文章页静态页面，所以只能对整站实现伪静态化!</p></li><li><p>wordpress的博客程序定位，简单的数据库层等都注定了他不能适应大数据。</p></li><li><p>数据库支持单一，目前只支持MySQL。</p></li></ul><p><strong>二、typecho</strong></p><p>typecho是一个后期之秀的个人博客系统，目前有很多程序员方面的人开始选择typecho。</p><p><strong>1、优点</strong></p><ul><li><p>默认支持Markdown语法，很受程序员青睐。</p></li><li><p>轻量级、占用内存少，响应速度比wordpress快。</p></li></ul><p><strong>2、缺点</strong></p><ul><li><p>模板插件比较少，对于比较喜欢折腾的人来说有点困难。</p></li><li><p>使用权重不是很广，有问题比较难找到解决方案。</p></li></ul><p><strong>三、Emlog</strong></p><p>emlog 是 every memory log 的简称，是一款基于PHP和MySQL的功能强大的博客及CMS建站系统。Emlog也是常用的博客程序之一，这款博客系统小巧简单、灵活快速，还自带微博和手机版功能；官方也有提供不错的主题模板和插件支持，可以看出来用户是比ZBLOG多的，主要是ZBLOG因为付费的主题和插件限制了用户发展。</p><p><strong>1、优点</strong></p><ul><li>足够小巧简单</li></ul><p>emlog只有几百k的文件，相比wordpress动辄10多MB大小来说，它显得非常小巧。即使zblog也足足比它大了好几倍，页面复杂了好几倍，这让很多喜欢简单的站长来说，非常受益。</p><ul><li>足够灵活快速</li></ul><p>即使不会写php的站长，使用emlog也非常灵活快速。它右侧侧边栏可以随意自定义，并且位置也能自定义设置，比如一些日历插件、留言插件等等。</p><ul><li>免费模板多</li></ul><p>官方提供了足够多的优秀模板，和wp一样，不论是从使用功能方面，还是外观方面，都有足够多喜欢emlog的用户来开发模板，这保证了基本能找到自己所需要的。</p><p><strong>2、缺点</strong></p><ul><li>不支持html静态化</li></ul><p>虽然emlog博客系统支持伪静态，但是很多时候还是需要静态化的，比如我们优化方面的考虑，比如用户有好体验的考虑，页面的静态化已经成为很多站长首选的功能之一，以此这一点是emlog博客系统最大的不足之一。</p><ul><li>head的元标记设计并不合理</li></ul><p>元标记包含了title、description、tag标签和keywords标签。首先是title问题，emlog默认的是每篇日志后边都会自动带上站点的title，如果你的title较长的话，及会导致你的内容的标题很长，同时内容的标题重复度在搜索引擎看来很高。</p><ul><li>目前用户不多，资源和教程文档都比较少，这点对emlog新手不友好。</li></ul><p><strong>四、Catfish鮸鱼CMS</strong></p><p>Catfish鮸鱼CMS程序是一款免费开源的PHP内容管理系统，只是看到版本更新也是比较频繁，而且只需要更换适合个人博客的主题就可以成为一个博客网站，所以也就列举为博客程序之一。官方也有提供免费主题和插件支持。但是估计在博客程序中使用这款软件的不是很多。</p><p><strong>五、Z-Blog</strong></p><p>Z-Blog是国内的一个团队开发的个人博客系统，从2005年Z-Blog第一版发布以来，目前已有十多年的历史，在国内有比较高的知名度。很多不喜欢wordpress博客系统的独立博主都使用zblog搭建个人网站。</p><h6 id="六、GitHub-hexo-搭建的静态博客"><a href="#六、GitHub-hexo-搭建的静态博客" class="headerlink" title="六、GitHub+ hexo 搭建的静态博客"></a>六、GitHub+ <strong>hexo</strong> 搭建的静态博客</h6><p>我还是比较喜欢这种方式的，特地把重要的放后面，就是环境配置起来比较麻烦。</p><h6 id="1、优点"><a href="#1、优点" class="headerlink" title="1、优点"></a>1、优点</h6><ul><li>不需要服务器，直接在 github 上可搭建，同时还有 github 的域名支撑，经济实惠。</li><li>天然支持 markdown 语法，写博客必备。</li><li>大量主题可选，官方文档支持较好，线下也有很多基于 hexo 搭建的平台，所以有问题可以大量 google 或百度。</li></ul><h6 id="2、缺点"><a href="#2、缺点" class="headerlink" title="2、缺点"></a>2、缺点</h6><ul><li>github 上搭建既是优点也是缺点，因为速度有些慢，但是本来博客流量就不算大，其实也不算啥。</li><li>由于 hexo 是先在本地上写好，再用命令上传，命令？那就涉及到一堆环境了，所以一旦你要更换电脑设备写博客，那么环境又得重新搭建。</li></ul>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> Typecho </tag>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建教程(一)</title>
      <link href="/2022/03/01/hexoblogdajianyi/"/>
      <url>/2022/03/01/hexoblogdajianyi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搭建个人博客需要什么呢？唯一需要的就是<strong>耐心、坚持</strong>。你需要在遇到问题时自己去网上查找答案，当然你也可以给我留言，和我探讨解决方案。当问题解决时，你会收获令人愉悦的满足感。</p></blockquote><p>本教程教大家利用GitHub+Hexo搭建博客，用这种方法搭建博客的人有很多，网上的教程也有很多，遇到问题在网上很容易找到答案，并且用这种方法搭建博客完全免费，安全可靠，不需要花费一分钱,不需要考担心博客安全防护。正因为它的这么多优点，本博客就采用这种方式搭建。这篇文章先带大家了解一下GitHub和hexo。</p><h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo ?"></a><strong>什么是Hexo ?</strong></h2><p>Hexo是一款基于Node.js的静态博客框架，快速，简介，高效,依赖少，易于安装使用，是搭建博客的首选框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可生成一个静态网页展示我们发布的文章，同时也提供了大量精美的博客主题供我们使用。Hexo可以方便的生成静态网页托管在GitHub和Heroku上，这里我们选用的是GitHub，Hexo同时也是GitHub上的开源项目，参见：<a href="https://link.zhihu.com/?target=https://github.com/hexojs/hexo">hexojs/hexo</a> 如果想要更加全面的了解Hexo，可以到其官网 <a href="https://link.zhihu.com/?target=https://hexo.io/">Hexo</a> 了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h2 id="Hexo博客框架的优点"><a href="#Hexo博客框架的优点" class="headerlink" title="Hexo博客框架的优点"></a>Hexo博客框架的优点</h2><ul><li>速度极快：Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li><li>支持MarkDown：Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</li><li>一键部署：只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台。</li><li>插件和可扩展性：这个也是hexo很强大的一个地方，强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成。</li></ul><h2 id="什么是GitHub"><a href="#什么是GitHub" class="headerlink" title="什么是GitHub?"></a>什么是GitHub?</h2><p>GitHub 因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。</p><p>GitHub作为全球最大的程序员交友网站，是一个代码托管平台和开发者社区，开发者可以在Github上创建自己的开源项目并与其他开发者协作编码。</p><p>GitHub 于 2008 年 4 月 10 日正式上线，除了 Git 代码仓库托管及基本的 Web 管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其托管版本数量非常之多，而且其中不乏知名开源项目，例如 Ruby on Rails、jQuery、python 等。</p><p>作为开源代码库以及版本控制系统，Github 拥有超过千万的开发者用户。随着越来越多的应用程序转移到了云上，Github 已经成为了管理软件开发以及发现已有代码的首选方法。</p><p>如前所述，作为一个分布式的版本控制系统，在 Git 中并不存在主库这样的概念，每一份复制出的库都可以独立使用，任何两个库之间的不一致之处都可以进行合并。</p><p>GitHub 可以托管各种 Git 库，并提供一个 web 界面，但与其它像 SourceForge 或 Google Code 这样的服务不同，GitHub 的独特卖点在于从另外一个项目进行分支的简易性。为一个项目贡献代码非常简单：首先点击项目站点的Fork的按钮，然后将代码检出并将修改加入到刚才分出的代码库中，最后通过内建的pull request机制向项目负责人申请代码合并。</p><p>在 GitHub，用户可以通过Explore轻而易举地找到海量的开源代码。因此，称之为程序员的 圣地 也不过吧？</p><p>这个教程就是教大家通过GitHub的GitHub Pages免费托管静态站点，它的主要特点：免费托管、自带主题、支持自制页面和Jekyll，还支持绑定自己的顶级域名。</p><h2 id="为什么使用Github-Pages"><a href="#为什么使用Github-Pages" class="headerlink" title="为什么使用Github Pages"></a><strong>为什么使用Github Pages</strong></h2><ul><li>搭建简单而且免费；</li><li>支持静态脚本；</li><li>可以绑定你的域名；</li><li>DIY自由发挥，动手实践一些有意思的东西git,markdown,bootstrap,jekyll；</li><li>理想写博环境，git+github+markdown+jekyll。</li></ul><p>更多内容请期待后面的教程吧！</p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 建站教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博客</title>
      <link href="/2022/01/21/sitebuilderannouncement/"/>
      <url>/2022/01/21/sitebuilderannouncement/</url>
      
        <content type="html"><![CDATA[<h3 id="「-关于博客」"><a href="#「-关于博客」" class="headerlink" title="「 关于博客」"></a><em><strong>「 关于博客」</strong></em></h3><blockquote><p>博客虽说是用来分享的平台，但我觉得更可以用来记录和总结生活。</p></blockquote><ol><li>个人博客，一个曾经十分火热的名词，但是在如今似乎已经冷却了下来。</li><li>通过博客展现自我，畅所欲言，自定义博客的内容和风格，把它变成我想要的样子。</li><li>我认为没事写写文章，过一段时间后，自己回顾自己所写的的博文，会心一笑，岂不美哉。</li></ol><h3 id="「-关于隐私协议的声明-」"><a href="#「-关于隐私协议的声明-」" class="headerlink" title="「 关于隐私协议的声明 」"></a><em><strong>「 关于隐私协议的声明 」</strong></em></h3><blockquote><p>我们非常重视您的隐私和个人信息保护。在您浏览本站时，本站可能会收集和使用您的相关信息。</p></blockquote><ol><li>本站开启了HTTPS以保障访问安全。</li><li>本站使用第三方不蒜子网站统计来统计整站页面数据。</li><li>因微信，bilibili等网站无法获取原文信息，故不会标注出以上引用来源。</li><li>本站所收集的数据信息仅用于网站数据分析，不会与任何公司、组织和个人共享您的个人信息，不会将您的个人信息转让给任何公司、组织和个人。 </li></ol><h3 id="「-留言板说明-」"><a href="#「-留言板说明-」" class="headerlink" title="「 留言板说明 」"></a><em><strong>「 留言板说明 」</strong></em></h3><blockquote><p>大家可以通过留言板来交流讨论，请合理利用。</p></blockquote><ol><li><p>友链信息如果乱写，不会回复，直接删评。</p></li><li><p>请文明发言，遵守法律法规，共建清朗网络空间。</p></li><li><p>友链示例：</p><p><strong>博客名称: 残阳小栈</strong></p><p><strong>博客网址: <a href="http://52youxi.github.io/">http://52youxi.github.io</a></strong></p><p><strong>博客头像: <a href="http://52youxi.github.io/medias/logo.png">http://52youxi.github.io/medias/logo.png</a></strong></p><p><strong>博客介绍: 犹豫就会败北</strong></p></li></ol><p>​         – -The END - –</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关于博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
